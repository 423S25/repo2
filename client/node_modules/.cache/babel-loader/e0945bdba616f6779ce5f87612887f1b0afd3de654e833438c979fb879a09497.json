{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/loginsystem/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { notifications } from '@mantine/notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Simple in-memory \"database\" for demonstration purposes\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst demoUsers = [{\n  id: 1,\n  username: 'demo',\n  email: 'demo@example.com',\n  password: 'password'\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = () => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check error:', error);\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // For demo purposes, simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Find user in our demo \"database\"\n      const foundUser = [...demoUsers].find(u => u.email === email && u.password === password);\n      if (foundUser) {\n        // Create a copy without the password\n        const userWithoutPassword = {\n          id: foundUser.id,\n          username: foundUser.username,\n          email: foundUser.email\n        };\n        localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n        setUser(userWithoutPassword);\n        setIsAuthenticated(true);\n        notifications.show({\n          title: 'Login Successful',\n          message: 'Welcome back!',\n          color: 'green'\n        });\n        return true;\n      } else {\n        // Try with any credentials for demo purposes\n        const newUser = {\n          id: Date.now(),\n          // Simple unique ID\n          username: email.split('@')[0],\n          // Use part of email as username \n          email: email\n        };\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setUser(newUser);\n        setIsAuthenticated(true);\n        notifications.show({\n          title: 'Login Successful',\n          message: 'Welcome back!',\n          color: 'green'\n        });\n        return true;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      notifications.show({\n        title: 'Login Failed',\n        message: 'Login failed, please try again',\n        color: 'red'\n      });\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      // For demo purposes, simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Store in our \"database\"\n      const newUser = {\n        id: Date.now(),\n        username,\n        email,\n        password\n      };\n      demoUsers.push(newUser);\n      notifications.show({\n        title: 'Registration Successful',\n        message: 'You can now log in with your credentials',\n        color: 'green'\n      });\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      notifications.show({\n        title: 'Registration Failed',\n        message: 'Registration failed, please try again',\n        color: 'red'\n      });\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    notifications.show({\n      title: 'Logged Out',\n      message: 'You have been logged out successfully',\n      color: 'blue'\n    });\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","notifications","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","demoUsers","id","username","email","password","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","storedUser","localStorage","getItem","parsedUser","JSON","parse","error","console","removeItem","login","Promise","resolve","setTimeout","foundUser","find","u","userWithoutPassword","setItem","stringify","show","title","message","color","newUser","Date","now","split","register","push","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackson/loginsystem/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { notifications } from '@mantine/notifications';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\n// Simple in-memory \"database\" for demonstration purposes\nconst demoUsers = [\n  { id: 1, username: 'demo', email: 'demo@example.com', password: 'password' }\n];\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = () => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          const parsedUser = JSON.parse(storedUser);\n          setUser(parsedUser);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check error:', error);\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      // For demo purposes, simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Find user in our demo \"database\"\n      const foundUser = [...demoUsers].find(u => \n        u.email === email && u.password === password\n      );\n\n      if (foundUser) {\n        // Create a copy without the password\n        const userWithoutPassword = { \n          id: foundUser.id, \n          username: foundUser.username, \n          email: foundUser.email \n        };\n        localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n        setUser(userWithoutPassword);\n        setIsAuthenticated(true);\n        notifications.show({\n          title: 'Login Successful',\n          message: 'Welcome back!',\n          color: 'green',\n        });\n        return true;\n      } else {\n        // Try with any credentials for demo purposes\n        const newUser = { \n          id: Date.now(), // Simple unique ID\n          username: email.split('@')[0], // Use part of email as username \n          email: email \n        };\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setUser(newUser);\n        setIsAuthenticated(true);\n        notifications.show({\n          title: 'Login Successful',\n          message: 'Welcome back!',\n          color: 'green',\n        });\n        return true;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      notifications.show({\n        title: 'Login Failed',\n        message: 'Login failed, please try again',\n        color: 'red',\n      });\n      return false;\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      // For demo purposes, simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Store in our \"database\"\n      const newUser = { id: Date.now(), username, email, password };\n      demoUsers.push(newUser);\n\n      notifications.show({\n        title: 'Registration Successful',\n        message: 'You can now log in with your credentials',\n        color: 'green',\n      });\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      notifications.show({\n        title: 'Registration Failed',\n        message: 'Registration failed, please try again',\n        color: 'red',\n      });\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    notifications.show({\n      title: 'Logged Out',\n      message: 'You have been logged out successfully',\n      color: 'blue',\n    });\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}