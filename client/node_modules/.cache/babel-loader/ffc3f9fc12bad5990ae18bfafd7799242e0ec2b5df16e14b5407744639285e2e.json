{"ast":null,"code":"'use client';\n\nfunction isInRange({\n  min,\n  max\n}, error) {\n  const _error = error || true;\n  return value => {\n    if (typeof value !== \"number\") {\n      return _error;\n    }\n    let valid = true;\n    if (typeof min === \"number\" && value < min) {\n      valid = false;\n    }\n    if (typeof max === \"number\" && value > max) {\n      valid = false;\n    }\n    return valid ? null : _error;\n  };\n}\nexport { isInRange };","map":{"version":3,"names":["isInRange","min","max","error","_error","value","valid"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/validators/is-in-range/is-in-range.ts"],"sourcesContent":["interface IsInRangePayload {\n  min?: number;\n  max?: number;\n}\n\nexport function isInRange({ min, max }: IsInRangePayload, error?: React.ReactNode) {\n  const _error = error || true;\n\n  return (value: unknown): React.ReactNode => {\n    if (typeof value !== 'number') {\n      return _error;\n    }\n\n    let valid = true;\n\n    if (typeof min === 'number' && value < min) {\n      valid = false;\n    }\n\n    if (typeof max === 'number' && value > max) {\n      valid = false;\n    }\n\n    return valid ? null : _error;\n  };\n}\n"],"mappings":";;AAKO,SAASA,SAAUA,CAAA;EAAEC,GAAK;EAAAC;AAAA,GAAyBC,KAAyB;EACjF,MAAMC,MAAA,GAASD,KAAS;EAExB,OAAQE,KAAoC;IACtC,WAAOA,KAAA,KAAU,QAAU;MACtB,OAAAD,MAAA;IAAA;IAGT,IAAIE,KAAQ;IAEZ,IAAI,OAAOL,GAAA,KAAQ,QAAY,IAAAI,KAAA,GAAQJ,GAAK;MAClCK,KAAA;IAAA;IAGV,IAAI,OAAOJ,GAAA,KAAQ,QAAY,IAAAG,KAAA,GAAQH,GAAK;MAClCI,KAAA;IAAA;IAGV,OAAOA,KAAA,GAAQ,IAAO,GAAAF,MAAA;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}