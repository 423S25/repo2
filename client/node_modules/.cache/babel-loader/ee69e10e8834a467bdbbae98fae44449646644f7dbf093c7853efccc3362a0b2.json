{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nimport { filterErrors } from './filter-errors/filter-errors.mjs';\nfunction useFormErrors(initialErrors) {\n  const [errorsState, setErrorsState] = useState(filterErrors(initialErrors));\n  const errorsRef = useRef(errorsState);\n  const setErrors = useCallback(errors => {\n    setErrorsState(current => {\n      const newErrors = filterErrors(typeof errors === \"function\" ? errors(current) : errors);\n      errorsRef.current = newErrors;\n      return newErrors;\n    });\n  }, []);\n  const clearErrors = useCallback(() => setErrors({}), []);\n  const clearFieldError = useCallback(path => {\n    if (errorsRef.current[path] === void 0) {\n      return;\n    }\n    setErrors(current => {\n      const errors = {\n        ...current\n      };\n      delete errors[path];\n      return errors;\n    });\n  }, [errorsState]);\n  const setFieldError = useCallback((path, error) => {\n    if (error == null || error === false) {\n      clearFieldError(path);\n    } else if (errorsRef.current[path] !== error) {\n      setErrors(current => ({\n        ...current,\n        [path]: error\n      }));\n    }\n  }, [errorsState]);\n  return {\n    errorsState,\n    setErrors,\n    clearErrors,\n    setFieldError,\n    clearFieldError\n  };\n}\nexport { useFormErrors };","map":{"version":3,"names":["useFormErrors","initialErrors","errorsState","setErrorsState","useState","filterErrors","errorsRef","useRef","setErrors","useCallback","errors","current","newErrors","clearErrors","clearFieldError","path","setFieldError","error"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/hooks/use-form-errors/use-form-errors.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { ClearErrors, ClearFieldError, FormErrors, SetErrors, SetFieldError } from '../../types';\nimport { filterErrors } from './filter-errors/filter-errors';\n\nexport interface $FormErrors<Values extends Record<string, any>> {\n  errorsState: FormErrors;\n  setErrors: SetErrors;\n  clearErrors: ClearErrors;\n  setFieldError: SetFieldError<Values>;\n  clearFieldError: ClearFieldError;\n}\n\nexport function useFormErrors<Values extends Record<string, any>>(\n  initialErrors: FormErrors\n): $FormErrors<Values> {\n  const [errorsState, setErrorsState] = useState(filterErrors(initialErrors));\n  const errorsRef = useRef(errorsState);\n\n  const setErrors: SetErrors = useCallback((errors) => {\n    setErrorsState((current) => {\n      const newErrors = filterErrors(typeof errors === 'function' ? errors(current) : errors);\n      errorsRef.current = newErrors;\n      return newErrors;\n    });\n  }, []);\n\n  const clearErrors: ClearErrors = useCallback(() => setErrors({}), []);\n\n  const clearFieldError: ClearFieldError = useCallback(\n    (path) => {\n      if (errorsRef.current[path as string] === undefined) {\n        return;\n      }\n\n      setErrors((current) => {\n        const errors = { ...current };\n        delete errors[path as string];\n        return errors;\n      });\n    },\n    [errorsState]\n  );\n\n  const setFieldError: SetFieldError<Values> = useCallback(\n    (path, error) => {\n      if (error == null || error === false) {\n        clearFieldError(path);\n      } else if (errorsRef.current[path as string] !== error) {\n        setErrors((current) => ({ ...current, [path]: error }));\n      }\n    },\n    [errorsState]\n  );\n\n  return {\n    errorsState,\n    setErrors,\n    clearErrors,\n    setFieldError,\n    clearFieldError,\n  };\n}\n"],"mappings":";;;;AAYO,SAASA,cACdC,aACqB;EACrB,MAAM,CAACC,WAAa,EAAAC,cAAc,IAAIC,QAAS,CAAAC,YAAA,CAAaJ,aAAa,CAAC;EACpE,MAAAK,SAAA,GAAYC,MAAA,CAAOL,WAAW;EAE9B,MAAAM,SAAA,GAAuBC,WAAY,CAACC,MAAW;IACnDP,cAAA,CAAgBQ,OAAY;MACpB,MAAAC,SAAA,GAAYP,YAAA,CAAa,OAAOK,MAAA,KAAW,aAAaA,MAAO,CAAAC,OAAO,IAAID,MAAM;MACtFJ,SAAA,CAAUK,OAAU,GAAAC,SAAA;MACb,OAAAA,SAAA;IAAA,CACR;EACH,GAAG,EAAE;EAEC,MAAAC,WAAA,GAA2BJ,WAAA,CAAY,MAAMD,SAAA,CAAU,CAAE,IAAG,EAAE;EAEpE,MAAMM,eAAmC,GAAAL,WAAA,CACtCM,IAAS;IACR,IAAIT,SAAU,CAAAK,OAAA,CAAQI,IAAc,MAAM,KAAW;MACnD;IAAA;IAGFP,SAAA,CAAWG,OAAY;MACf,MAAAD,MAAA,GAAS;QAAE,GAAGC;MAAQ;MAC5B,OAAOD,MAAA,CAAOK,IAAc;MACrB,OAAAL,MAAA;IAAA,CACR;EACH,GACA,CAACR,WAAW,CACd;EAEA,MAAMc,aAAuC,GAAAP,WAAA,CAC3C,CAACM,IAAA,EAAME,KAAU;IACX,IAAAA,KAAA,IAAS,IAAQ,IAAAA,KAAA,KAAU,KAAO;MACpCH,eAAA,CAAgBC,IAAI;IACX,WAAAT,SAAA,CAAUK,OAAQ,CAAAI,IAAc,MAAME,KAAO;MAC5CT,SAAA,CAACG,OAAA,KAAa;QAAE,GAAGA,OAAA;QAAS,CAACI,IAAI,GAAGE;MAAA,CAAQ;IAAA;EAE1D,GACA,CAACf,WAAW,CACd;EAEO;IACLA,WAAA;IACAM,SAAA;IACAK,WAAA;IACAG,aAAA;IACAF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}