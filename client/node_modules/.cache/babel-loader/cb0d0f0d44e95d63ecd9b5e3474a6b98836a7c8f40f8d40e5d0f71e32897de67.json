{"ast":null,"code":"'use client';\n\nfunction isLengthValid(payload, value) {\n  if (typeof payload === \"number\") {\n    return value.length === payload;\n  }\n  const {\n    max,\n    min\n  } = payload;\n  let valid = true;\n  if (typeof max === \"number\" && value.length > max) {\n    valid = false;\n  }\n  if (typeof min === \"number\" && value.length < min) {\n    valid = false;\n  }\n  return valid;\n}\nfunction hasLength(payload, error) {\n  const _error = error || true;\n  return value => {\n    if (typeof value === \"string\") {\n      return isLengthValid(payload, value.trim()) ? null : _error;\n    }\n    if (typeof value === \"object\" && value !== null && \"length\" in value) {\n      return isLengthValid(payload, value) ? null : _error;\n    }\n    return _error;\n  };\n}\nexport { hasLength };","map":{"version":3,"names":["isLengthValid","payload","value","length","max","min","valid","hasLength","error","_error","trim"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/validators/has-length/has-length.ts"],"sourcesContent":["interface HasLengthOptions {\n  max?: number;\n  min?: number;\n}\n\ntype HasLengthPayload = HasLengthOptions | number;\n\nfunction isLengthValid(payload: HasLengthPayload, value: any) {\n  if (typeof payload === 'number') {\n    return value.length === payload;\n  }\n\n  const { max, min } = payload;\n  let valid = true;\n\n  if (typeof max === 'number' && value.length > max) {\n    valid = false;\n  }\n\n  if (typeof min === 'number' && value.length < min) {\n    valid = false;\n  }\n\n  return valid;\n}\n\nexport function hasLength(payload: HasLengthPayload, error?: React.ReactNode) {\n  const _error = error || true;\n\n  return (value: unknown): React.ReactNode => {\n    if (typeof value === 'string') {\n      return isLengthValid(payload, value.trim()) ? null : _error;\n    }\n\n    if (typeof value === 'object' && value !== null && 'length' in value) {\n      return isLengthValid(payload, value) ? null : _error;\n    }\n\n    return _error;\n  };\n}\n"],"mappings":";;AAOA,SAASA,cAAcC,OAAA,EAA2BC,KAAY;EACxD,WAAOD,OAAA,KAAY,QAAU;IAC/B,OAAOC,KAAA,CAAMC,MAAW,KAAAF,OAAA;EAAA;EAGpB;IAAEG,GAAK;IAAAC;EAAA,CAAQ,GAAAJ,OAAA;EACrB,IAAIK,KAAQ;EAEZ,IAAI,OAAOF,GAAA,KAAQ,QAAY,IAAAF,KAAA,CAAMC,MAAA,GAASC,GAAK;IACzCE,KAAA;EAAA;EAGV,IAAI,OAAOD,GAAA,KAAQ,QAAY,IAAAH,KAAA,CAAMC,MAAA,GAASE,GAAK;IACzCC,KAAA;EAAA;EAGH,OAAAA,KAAA;AACT;AAEgB,SAAAC,UAAUN,OAAA,EAA2BO,KAAyB;EAC5E,MAAMC,MAAA,GAASD,KAAS;EAExB,OAAQN,KAAoC;IACtC,WAAOA,KAAA,KAAU,QAAU;MAC7B,OAAOF,aAAA,CAAcC,OAAS,EAAAC,KAAA,CAAMQ,IAAK,CAAC,KAAI,IAAO,GAAAD,MAAA;IAAA;IAGvD,IAAI,OAAOP,KAAU,iBAAYA,KAAU,aAAQ,YAAYA,KAAO;MACpE,OAAOF,aAAc,CAAAC,OAAA,EAASC,KAAK,IAAI,IAAO,GAAAO,MAAA;IAAA;IAGzC,OAAAA,MAAA;EACT;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}