{"ast":null,"code":"'use client';\n\nimport { validateValues } from './validate-values.mjs';\nfunction validateFieldValue(path, rules, values) {\n  if (typeof path !== \"string\") {\n    return {\n      hasError: false,\n      error: null\n    };\n  }\n  const results = validateValues(rules, values);\n  const pathInError = Object.keys(results.errors).find(errorKey => path.split(\".\").every((pathPart, i) => pathPart === errorKey.split(\".\")[i]));\n  return {\n    hasError: !!pathInError,\n    error: pathInError ? results.errors[pathInError] : null\n  };\n}\nexport { validateFieldValue };","map":{"version":3,"names":["validateFieldValue","path","rules","values","hasError","error","results","validateValues","pathInError","Object","keys","errors","find","errorKey","split","every","pathPart","i"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/validate/validate-field-value.ts"],"sourcesContent":["import { FormFieldValidationResult, FormValidateInput } from '../types';\nimport { validateValues } from './validate-values';\n\nexport function validateFieldValue<T>(\n  path: unknown,\n  rules: FormValidateInput<T> | undefined,\n  values: T\n): FormFieldValidationResult {\n  if (typeof path !== 'string') {\n    return { hasError: false, error: null };\n  }\n\n  const results = validateValues(rules, values);\n  const pathInError = Object.keys(results.errors).find((errorKey) =>\n    path.split('.').every((pathPart, i) => pathPart === errorKey.split('.')[i])\n  );\n  return { hasError: !!pathInError, error: pathInError ? results.errors[pathInError] : null };\n}\n"],"mappings":";;;AAGgB,SAAAA,mBACdC,IACA,EAAAC,KAAA,EACAC,MAC2B;EACvB,WAAOF,IAAA,KAAS,QAAU;IAC5B,OAAO;MAAEG,QAAA,EAAU,KAAO;MAAAC,KAAA,EAAO;IAAK;EAAA;EAGlC,MAAAC,OAAA,GAAUC,cAAe,CAAAL,KAAA,EAAOC,MAAM;EAC5C,MAAMK,WAAc,GAAAC,MAAA,CAAOC,IAAK,CAAAJ,OAAA,CAAQK,MAAM,CAAE,CAAAC,IAAA,CAAMC,QACpD,IAAAZ,IAAA,CAAKa,KAAM,IAAG,EAAEC,KAAM,EAACC,QAAU,EAAAC,CAAA,KAAMD,QAAA,KAAaH,QAAS,CAAAC,KAAA,CAAM,GAAG,EAAEG,CAAC,CAAC,CAC5E;EACO;IAAEb,QAAU,GAAC,CAACI,WAAA;IAAaH,KAAO,EAAAG,WAAA,GAAcF,OAAQ,CAAAK,MAAA,CAAOH,WAAW,IAAI;EAAK;AAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}