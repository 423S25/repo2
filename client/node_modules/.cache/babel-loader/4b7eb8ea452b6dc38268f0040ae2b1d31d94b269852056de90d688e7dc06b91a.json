{"ast":null,"code":"'use client';\n\nfunction reorderErrors(path, {\n  from,\n  to\n}, errors) {\n  const oldKeyStart = `${path}.${from}`;\n  const newKeyStart = `${path}.${to}`;\n  const clone = {\n    ...errors\n  };\n  Object.keys(errors).every(key => {\n    let oldKey;\n    let newKey;\n    if (key.startsWith(oldKeyStart)) {\n      oldKey = key;\n      newKey = key.replace(oldKeyStart, newKeyStart);\n    }\n    if (key.startsWith(newKeyStart)) {\n      oldKey = key.replace(newKeyStart, oldKeyStart);\n      newKey = key;\n    }\n    if (oldKey && newKey) {\n      const value1 = clone[oldKey];\n      const value2 = clone[newKey];\n      value2 === void 0 ? delete clone[oldKey] : clone[oldKey] = value2;\n      value1 === void 0 ? delete clone[newKey] : clone[newKey] = value1;\n      return false;\n    }\n    return true;\n  });\n  return clone;\n}\nexport { reorderErrors };","map":{"version":3,"names":["reorderErrors","path","from","to","errors","oldKeyStart","newKeyStart","clone","Object","keys","every","key","oldKey","newKey","startsWith","replace","value1","value2"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/lists/reorder-errors.ts"],"sourcesContent":["import { ReorderPayload } from '../types';\n\nexport function reorderErrors<T>(path: unknown, { from, to }: ReorderPayload, errors: T): T {\n  const oldKeyStart = `${path}.${from}`;\n  const newKeyStart = `${path}.${to}`;\n\n  const clone: any = { ...errors };\n  Object.keys(errors as any).every((key) => {\n    let oldKey;\n    let newKey;\n    if (key.startsWith(oldKeyStart)) {\n      oldKey = key;\n      newKey = key.replace(oldKeyStart, newKeyStart);\n    }\n    if (key.startsWith(newKeyStart)) {\n      oldKey = key.replace(newKeyStart, oldKeyStart);\n      newKey = key;\n    }\n    if (oldKey && newKey) {\n      const value1 = clone[oldKey];\n      const value2 = clone[newKey];\n      value2 === undefined ? delete clone[oldKey] : (clone[oldKey] = value2);\n      value1 === undefined ? delete clone[newKey] : (clone[newKey] = value1);\n      return false;\n    }\n    return true;\n  });\n\n  return clone;\n}\n"],"mappings":";;AAEO,SAASA,cAAiBC,IAAe;EAAEC,IAAM;EAAAC;AAAA,GAAsBC,MAAc;EAC1F,MAAMC,WAAc,MAAGJ,IAAI,IAAIC,IAAI;EACnC,MAAMI,WAAc,MAAGL,IAAI,IAAIE,EAAE;EAE3B,MAAAI,KAAA,GAAa;IAAE,GAAGH;EAAO;EAC/BI,MAAA,CAAOC,IAAK,CAAAL,MAAa,CAAE,CAAAM,KAAA,CAAOC,GAAQ;IACpC,IAAAC,MAAA;IACA,IAAAC,MAAA;IACA,IAAAF,GAAA,CAAIG,UAAW,CAAAT,WAAW,CAAG;MACtBO,MAAA,GAAAD,GAAA;MACAE,MAAA,GAAAF,GAAA,CAAII,OAAQ,CAAAV,WAAA,EAAaC,WAAW;IAAA;IAE3C,IAAAK,GAAA,CAAIG,UAAW,CAAAR,WAAW,CAAG;MACtBM,MAAA,GAAAD,GAAA,CAAII,OAAQ,CAAAT,WAAA,EAAaD,WAAW;MACpCQ,MAAA,GAAAF,GAAA;IAAA;IAEX,IAAIC,MAAA,IAAUC,MAAQ;MACd,MAAAG,MAAA,GAAST,KAAA,CAAMK,MAAM;MACrB,MAAAK,MAAA,GAASV,KAAA,CAAMM,MAAM;MAC3BI,MAAA,KAAW,SAAY,OAAOV,KAAA,CAAMK,MAAM,CAAK,GAAAL,KAAA,CAAMK,MAAM,CAAI,GAAAK,MAAA;MAC/DD,MAAA,KAAW,SAAY,OAAOT,KAAA,CAAMM,MAAM,CAAK,GAAAN,KAAA,CAAMM,MAAM,CAAI,GAAAG,MAAA;MACxD;IAAA;IAEF;EAAA,CACR;EAEM,OAAAT,KAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}