{"ast":null,"code":"var _jsxFileName = \"/Users/jackson/loginsystem/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { notifications } from '@mantine/notifications';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.get('/api/profile');\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check error:', error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      setIsAuthenticated(true);\n      notifications.show({\n        title: 'Login Successful',\n        message: 'Welcome back!',\n        color: 'green'\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      notifications.show({\n        title: 'Login Failed',\n        message,\n        color: 'red'\n      });\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/register', {\n        username,\n        email,\n        password\n      });\n      notifications.show({\n        title: 'Registration Successful',\n        message: 'You can now log in with your credentials',\n        color: 'green'\n      });\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      notifications.show({\n        title: 'Registration Failed',\n        message,\n        color: 'red'\n      });\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n    notifications.show({\n      title: 'Logged Out',\n      message: 'You have been logged out successfully',\n      color: 'blue'\n    });\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","notifications","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","email","password","post","setItem","show","title","message","color","_error$response","_error$response$data","register","username","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackson/loginsystem/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { notifications } from '@mantine/notifications';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.get('/api/profile');\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check error:', error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/login', { email, password });\n      const { token, user } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      setIsAuthenticated(true);\n      notifications.show({\n        title: 'Login Successful',\n        message: 'Welcome back!',\n        color: 'green',\n      });\n      return true;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      notifications.show({\n        title: 'Login Failed',\n        message,\n        color: 'red',\n      });\n      return false;\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/register', { \n        username, \n        email, \n        password \n      });\n      notifications.show({\n        title: 'Registration Successful',\n        message: 'You can now log in with your credentials',\n        color: 'green',\n      });\n      return true;\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      notifications.show({\n        title: 'Registration Failed',\n        message,\n        color: 'red',\n      });\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n    notifications.show({\n      title: 'Logged Out',\n      message: 'You have been logged out successfully',\n      color: 'blue',\n    });\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}