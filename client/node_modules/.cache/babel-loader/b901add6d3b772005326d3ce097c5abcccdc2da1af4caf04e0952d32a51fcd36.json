{"ast":null,"code":"'use client';\n\nfunction joiResolver(schema, options) {\n  const _schema = schema;\n  return values => {\n    const parsed = _schema.validate(values, {\n      abortEarly: false,\n      ...options\n    });\n    if (!parsed.error) {\n      return {};\n    }\n    const results = {};\n    parsed.error.details.forEach(error => {\n      results[error.path.join(\".\")] = error.message;\n    });\n    return results;\n  };\n}\nexport { joiResolver };","map":{"version":3,"names":["joiResolver","schema","options","_schema","values","parsed","validate","abortEarly","error","results","details","forEach","path","join","message"],"sources":["/Users/jackson/loginsystem/client/node_modules/@mantine/form/src/resolvers/joi-resolver/joi-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ninterface JoiError {\n  path: (string | number)[];\n  message: string;\n}\n\ninterface JoiResults {\n  success: boolean;\n  error: {\n    details: JoiError[];\n  };\n}\n\ninterface JoiSchema {\n  validate: (values: Record<string, any>, options: { abortEarly: boolean }) => JoiResults;\n}\n\nexport function joiResolver(schema: any, options?: any) {\n  const _schema: JoiSchema = schema;\n  return (values: Record<string, any>): FormErrors => {\n    const parsed = _schema.validate(values, { abortEarly: false, ...options });\n\n    if (!parsed.error) {\n      return {};\n    }\n\n    const results: Record<string, any> = {};\n    parsed.error.details.forEach((error) => {\n      results[error.path.join('.')] = error.message;\n    });\n\n    return results;\n  };\n}\n"],"mappings":";;AAkBgB,SAAAA,YAAYC,MAAA,EAAaC,OAAe;EACtD,MAAMC,OAAqB,GAAAF,MAAA;EAC3B,OAAQG,MAA4C;IAC5C,MAAAC,MAAA,GAASF,OAAA,CAAQG,QAAS,CAAAF,MAAA,EAAQ;MAAEG,UAAY;MAAO,GAAGL;IAAA,CAAS;IAErE,KAACG,MAAA,CAAOG,KAAO;MACjB,OAAO,CAAC;IAAA;IAGV,MAAMC,OAAA,GAA+B,CAAC;IACtCJ,MAAA,CAAOG,KAAM,CAAAE,OAAA,CAAQC,OAAQ,CAACH,KAAU;MACtCC,OAAA,CAAQD,KAAA,CAAMI,IAAK,CAAAC,IAAA,CAAK,GAAG,CAAC,IAAIL,KAAM,CAAAM,OAAA;IAAA,CACvC;IAEM,OAAAL,OAAA;EACT;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}